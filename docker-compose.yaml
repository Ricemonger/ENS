version: '3'

services:

  postgresql:
    container_name: postgresql
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - zipkin
    restart: unless-stopped

  config:
    build:
      context: .
      dockerfile: config/Dockerfile
    container_name: config
    ports:
      - "8888:8888"
    restart: unless-stopped

  discovery:
    build:
      context: .
      dockerfile: discovery/Dockerfile
    container_name: discovery
    ports:
      - "8761:8761"
    restart: unless-stopped

  gateway:
    build:
      context: .
      dockerfile: gateway/Dockerfile
    container_name: gateway
    ports:
      - "8080:8080"
    restart: unless-stopped

  contact:
    build:
      context: .
      dockerfile: contact/Dockerfile
    container_name: contact
    ports:
      - "8090:8090"
    restart: unless-stopped

  notification:
    build:
      context: .
      dockerfile: notification/Dockerfile
    container_name: notification
    ports:
      - "8091:8091"
    restart: unless-stopped

  security:
    build:
      context: .
      dockerfile: security/Dockerfile
    container_name: security
    ports:
      - "8093:8093"
    restart: unless-stopped

  send:
    build:
      context: .
      dockerfile: send/Dockerfile
    container_name: send
    ports:
      - "8092:8092"
    restart: unless-stopped

  telegram:
    build:
      context: .
      dockerfile: telegram/Dockerfile
    container_name: telegram
    ports:
      - "8094:8094"
    restart: unless-stopped


networks:
  postgres:
    driver: bridge
  zipkin:
    driver: bridge

volumes:
  postgres:
  pgadmin: